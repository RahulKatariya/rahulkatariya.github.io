{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:////Users/rahulkatariya/Developer/RahulKatariya/node_modules/lodash/kebabCase.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default","_components__WEBPACK_IMPORTED_MODULE_3__","PostPage","_ref","_ref$data","data","metadata","site","siteMetadata","post","markdownRemark","a","createElement","title","frontmatter","titleLinkHandler","navigate","id","date","category","html","url","fields","slug","disqus","timeToRead","categoryLinkHandler","arg","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAAO,EAAAE,GAAAE,EAAAX,EAAA,KAgCeY,UA3BE,SAAAC,GAKX,IAAAC,EAAAD,EAJJE,KACwBC,EAGpBF,EAHFG,KAAQC,aACQC,EAEdL,EAFFM,eAGF,OACEd,EAAAe,EAAAC,cAACX,EAAA,EAAD,CACEY,MAAOJ,EAAKK,YAAYD,MACxBP,SAAUA,EACVS,iBAAkB,kBAAMC,mBAAS,OAEjCpB,EAAAe,EAAAC,cAACX,EAAA,EAAD,CACEgB,GAAIR,EAAKQ,GACTJ,MAAOJ,EAAKK,YAAYD,MACxBK,KAAMT,EAAKK,YAAYI,KACvBC,SAAUV,EAAKK,YAAYK,SAC3BC,KAAMX,EAAKW,KACXC,IAAG,GAAKf,EAASe,IAAMZ,EAAKa,OAAOC,KACnCC,OAAQlB,EAASkB,OACjBC,WAAYhB,EAAKgB,WACjBC,oBAAqB,SAAAC,GAAG,OAAIX,mBAAQ,eAAgBY,IAAUD,SAQ/D,IAAMjC,EAAS,kCClCtB,IAuBAkC,EAvBuBtC,EAAQ,IAuB/BuC,CAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAE,EAAA,QAAAD,EAAAE,gBAGAC,EAAAC,QAAAP","file":"component---src-templates-post-js-a369b64506e5b67e248c.js","sourcesContent":["import React from \"react\";\nimport { graphql, navigate } from \"gatsby\";\nimport kebabCase from \"lodash/kebabCase\";\nimport { Page, Article } from \"./../components\";\n\nconst PostPage = ({\n  data: {\n    site: { siteMetadata: metadata },\n    markdownRemark: post\n  }\n}) => {\n  return (\n    <Page\n      title={post.frontmatter.title}\n      metadata={metadata}\n      titleLinkHandler={() => navigate(\"/\")}\n    >\n      <Article\n        id={post.id}\n        title={post.frontmatter.title}\n        date={post.frontmatter.date}\n        category={post.frontmatter.category}\n        html={post.html}\n        url={`${metadata.url}${post.fields.slug}`}\n        disqus={metadata.disqus}\n        timeToRead={post.timeToRead}\n        categoryLinkHandler={arg => navigate(`/categories/${kebabCase(arg)}`)}\n      />\n    </Page>\n  );\n};\n\nexport default PostPage;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        year\n        url\n        disqus\n        author {\n          name\n          avatar\n          bio\n          social {\n            phone\n            twitter\n            email\n            github\n            linkedin\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        category\n      }\n    }\n  }\n`;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n"],"sourceRoot":""}